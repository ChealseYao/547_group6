# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Infrastructure Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  lambdabluesky:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 1024
      Timeout: 150
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 2048
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
        DestinationConfig: {}
      ImageUri: >-
        390844757752.dkr.ecr.us-east-2.amazonaws.com/lambda-bluesky@sha256:24c34fa91032fa289ddea8b35812577343459a0bae6c3448300320920622f352
      PackageType: Image
      Policies:
        - Statement:
            - Sid: AllowInvokeSentimentAnalysis
              Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource:
                - !GetAtt lambdabluesky.Arn
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-2:390844757752:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-2:390844757752:log-group:/aws/lambda/lambda-bluesky:*
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: >-
                arn:aws:lambda:us-east-2:390844757752:function:sentiment-analysis-lambda*
            - Action:
                - comprehend:*
                - s3:ListAllMyBuckets
                - s3:ListBucket
                - s3:GetBucketLocation
                - iam:ListRoles
                - iam:GetRole
              Effect: Allow
              Resource: '*'
            - Effect: Allow
              Action:
                - s3:*
                - s3-object-lambda:*
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudformation:DescribeStacks
                - cloudformation:ListStackResources
                - cloudwatch:ListMetrics
                - cloudwatch:GetMetricData
                - ec2:DescribeSecurityGroups
                - ec2:DescribeSubnets
                - ec2:DescribeVpcs
                - kms:ListAliases
                - iam:GetPolicy
                - iam:GetPolicyVersion
                - iam:GetRole
                - iam:GetRolePolicy
                - iam:ListAttachedRolePolicies
                - iam:ListRolePolicies
                - iam:ListRoles
                - lambda:*
                - logs:DescribeLogGroups
                - states:DescribeStateMachine
                - states:ListStateMachines
                - tag:GetResources
                - xray:GetTraceSummaries
                - xray:BatchGetTraces
              Resource: '*'
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource: '*'
              Condition:
                StringEquals:
                  iam:PassedToService: lambda.amazonaws.com
            - Effect: Allow
              Action:
                - logs:DescribeLogStreams
                - logs:GetLogEvents
                - logs:FilterLogEvents
              Resource: arn:aws:logs:*:*:log-group:/aws/lambda/*
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /upload-data
            Method: ANY
        Api2:
          Type: Api
          Properties:
            Path: /upload-data
            Method: POST
        Api3:
          Type: Api
          Properties:
            Path: /lambda-bluesky
            Method: ANY
